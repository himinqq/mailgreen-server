"""add user_credentials table

Revision ID: c1b624571f02
Revises: 610c547e2ca2
Create Date: 2025-05-24 02:09:44.460835

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c1b624571f02"
down_revision: Union[str, None] = "610c547e2ca2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("idx_kw_keyword"), table_name="mail_keywords")
    op.drop_table("mail_keywords")
    op.drop_table("carbon_effects")
    op.drop_table("user_notifications")
    op.drop_index(op.f("idx_action_user_ts"), table_name="mail_actions")
    op.drop_table("mail_actions")
    op.alter_column(
        "analysis_tasks", "user_id", existing_type=sa.UUID(), nullable=False
    )
    op.drop_index(op.f("idx_task_user_time"), table_name="analysis_tasks")
    op.drop_constraint(
        op.f("analysis_tasks_user_id_fkey"), "analysis_tasks", type_="foreignkey"
    )
    op.drop_index(
        op.f("hnsw_mail_vec_idx"),
        table_name="mail_embeddings",
        postgresql_with={"m": "16", "ef_construction": "200"},
        postgresql_using="hnsw",
    )
    op.drop_index(op.f("idx_mail_recent"), table_name="mail_embeddings")
    op.drop_index(
        op.f("idx_mail_unread"),
        table_name="mail_embeddings",
        postgresql_where="(is_read = false)",
    )
    op.drop_index(op.f("idx_mail_user_sender"), table_name="mail_embeddings")
    op.drop_constraint(
        op.f("mail_embeddings_user_id_fkey"), "mail_embeddings", type_="foreignkey"
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_index(op.f("idx_users_email"), table_name="users")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f("idx_users_email"), "users", ["email"], unique=False)
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.create_foreign_key(
        op.f("mail_embeddings_user_id_fkey"),
        "mail_embeddings",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_index(
        op.f("idx_mail_user_sender"),
        "mail_embeddings",
        ["user_id", "sender"],
        unique=False,
    )
    op.create_index(
        op.f("idx_mail_unread"),
        "mail_embeddings",
        ["user_id", "is_read"],
        unique=False,
        postgresql_where="(is_read = false)",
    )
    op.create_index(
        op.f("idx_mail_recent"),
        "mail_embeddings",
        ["user_id", sa.literal_column("received_at DESC")],
        unique=False,
    )
    op.create_index(
        op.f("hnsw_mail_vec_idx"),
        "mail_embeddings",
        ["vector"],
        unique=False,
        postgresql_with={"m": "16", "ef_construction": "200"},
        postgresql_using="hnsw",
    )
    op.create_foreign_key(
        op.f("analysis_tasks_user_id_fkey"),
        "analysis_tasks",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_index(
        op.f("idx_task_user_time"),
        "analysis_tasks",
        ["user_id", sa.literal_column("started_at DESC")],
        unique=False,
    )
    op.alter_column("analysis_tasks", "user_id", existing_type=sa.UUID(), nullable=True)
    op.create_table(
        "mail_actions",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("mail_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "action",
            postgresql.ENUM("delete", "archive", "spam", name="mail_action_type"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "action_ts",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "carbon_saved",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["mail_id"],
            ["mail_embeddings.id"],
            name=op.f("mail_actions_mail_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("mail_actions_user_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("mail_actions_pkey")),
    )
    op.create_index(
        op.f("idx_action_user_ts"),
        "mail_actions",
        ["user_id", sa.literal_column("action_ts DESC")],
        unique=False,
    )
    op.create_table(
        "user_notifications",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "interval_hr",
            sa.INTEGER(),
            server_default=sa.text("24"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "last_sent_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("user_notifications_user_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("user_id", name=op.f("user_notifications_pkey")),
    )
    op.create_table(
        "carbon_effects",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("title", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("image_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("grams_min", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("grams_max", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("carbon_effects_pkey")),
    )
    op.create_table(
        "mail_keywords",
        sa.Column("mail_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "keyword", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column("weight", sa.REAL(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["mail_id"],
            ["mail_embeddings.id"],
            name=op.f("mail_keywords_mail_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("mail_id", "keyword", name=op.f("mail_keywords_pkey")),
    )
    op.create_index(op.f("idx_kw_keyword"), "mail_keywords", ["keyword"], unique=False)
    # ### end Alembic commands ###
